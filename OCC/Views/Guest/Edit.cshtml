@model Models.Guest

@{
    ViewBag.Title = "Guest Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="ui header">Edit</h2>

<div class="ui negative message" hidden="hidden" id="ErrorMessage">
    <i class="close icon" id="CloseErrorMessage"></i>
    <div class="header">
        There is a trouble with your request
    </div>
    <p id="ErrorMessageText"></p>
</div>

<form class="ui form" id="EditGuestForm" action="/Guest/Edit" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    <h4 class="ui dividing header">Personal Information</h4>
    <div class="two fields">
        <div class="field">
            <label>Name</label>
            <div class="two fields">
                <div class="field">
                    @Html.TextBoxFor(model => model.Name, new { @placeholder = "Name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="field">
                    @Html.TextBoxFor(model => model.Surname, new { @placeholder = "Surname" })
                    @Html.ValidationMessageFor(model => model.Surname)
                </div>
            </div>
        </div>
        <div class="field">
            <label>Gender</label>
            @Html.EnumDropDownListFor(model => model.Gender, new { @class = "ui selection dropdown" })
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
    </div>
    <input type="submit" value="Create" class="ui button" />
</form>



@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Guest</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/Developer/GuestEdit.js"></script>
}